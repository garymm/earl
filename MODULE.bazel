"""https://bazel.build/external/module"""

module(
    name = "earl",
    version = "0.0.0",
)

# BEGIN python toolchain
_PYTHON_VERSION = "3.12"

bazel_dep(name = "rules_python", version = "1.1.0", dev_dependency = True)

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(python_version = _PYTHON_VERSION)
# END python toolchain

# BEGIN python dependencies
bazel_dep(name = "rules_uv", version = "0.53.0", dev_dependency = True)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")

# TODO: figure out how to support multiple platforms
pip.parse(
    hub_name = "pypi",
    python_version = _PYTHON_VERSION,
    requirements_lock = "//:requirements_linux_x86_64.txt",
)

# https://github.com/google/orbax/issues/1429
pip.override(
    file = "orbax_checkpoint-0.11.1-py3-none-any.whl",
    patch_strip = 1,
    patches = ["//tools/patches:orbax-remove-BUILD.patch"],
)
use_repo(pip, "pypi")

pip.parse(
    hub_name = "basedpyright",
    python_version = _PYTHON_VERSION,
    requirements_lock = "//tools:requirements_basedpyright.txt",
)

use_repo(pip, "basedpyright")
# END python dependencies

bazel_dep(name = "aspect_rules_py", version = "1.3.1")

bazel_dep(
    name = "buildifier_prebuilt",
    version = "8.0.1",
    dev_dependency = True,
)
bazel_dep(name = "aspect_rules_lint", version = "1.0.9", dev_dependency = True)

bazel_dep(name = "aspect_bazel_lib", version = "2.13.0")
